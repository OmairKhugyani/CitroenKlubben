/* styling costom made for CitroenKlubben 2024 */
/* nameing tryes to follow BEM conventions */

/* by Philip Jensen & Omair Khugyani*/
/* for end of school project, computer science, Roskilde - Denmark, Jan 2025 */


/**
**table of content
  - root 
    - variables
  - tags
    - headings
    - buttons
    - links
    - form-input
  - classes
    - container
    - btn 
    - table
  - multiuse
    - padding
    - margin
  - media screen
    - 600 px
    - 900 px

*/
:root {
  /* colers main */
  --main-blue: rgb(77, 96, 137);
  --main-blue-dark: rgb(31, 52, 101);
  --main-blue-transparent: rgba(77, 96, 137, 0.384);
  --main-blue-dark-transparent: rgba(9, 31, 53, 0.377);
  --link-light: rgb(66, 108, 204);
  --text-coler: rgb(255, 255, 255);
  --text-gray: rgb(86, 89, 103);
  --gray-light: rgb(230, 230, 230);
  --gray-dark: rgb(120, 131, 155);

  /* colers accent */
  --green: rgb(56, 199, 89);
  --green-dark: rgb(48, 166, 76);
  --blue: rgb(80, 178, 243);
  --blue-dark: rgb(61, 138, 189);
  --red: rgb(233, 69, 82);
  --red-dark: rgb(187, 48, 59);
  --yellow: rgb(241, 226, 85);
  --yellow-dark: rgb(185, 172, 47);

  /* font sizing */
  --font-size: 1rem;
  --font-weight-light: 200;
  --font-weight-normal: 300;
  --font-weight-semibold: 400;
  --font-weight-bold: 500;

  /* font settings */
  letter-spacing: 1px;
  color: #ffffff;
  font-size: var(--font-size);
  font-weight: 300;
  font-family: 'Noto Sans', sans-serif;
  font-optical-sizing: auto;
}

* {
  /* makes border & padding counts in sizing added globely */
  box-sizing: border-box;
  text-rendering: optimizeLegibility;
}

/** tags */

body {
  display: block;
  margin: 0;
  background-color: rgb(32, 132, 199);
  background-image: url(../img/bg-citroen.jpg);
  background-position: 50% 50%;
  background-size: cover;
  padding-top: 2rem;
  padding-bottom: 2rem;
  background-attachment: fixed;
  height: clamp(100vh, 100%, 110%);
  width: 100vw;
  overflow-x: hidden;
}


/* heading */
h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: var(--font-weight-bold);
  margin: 0px;
}

h1,
.h1 {
  font-size: 2.8rem;
  margin-bottom: .8rem;
  text-align: center;
  text-shadow: 0px 5px 25px rgba(0, 0, 0, 0.400)
}

h2,
.h2 {
  font-size: 2.1rem;
  margin-bottom: 0.8rem;
}

h3,
.h3 {
  font-size: 1.5rem;
  margin-bottom: 0.8rem;
}

h4,
.h4 {
  font-size: 1.3rem;
  margin-bottom: 0.6rem;
  font-weight: var(--font-weight-semibold);
}

h5,
.h5 {
  font-size: 1.1rem;
  margin-bottom: 0.4rem;
  font-weight: var(--font-weight-semibold);
}

h6,
.h6 {
  font-size: .9rem;
  margin-bottom: .1rem;
  font-weight: var(--font-weight-semibold);
}

p {
  margin: .5rem 0;
  line-height: 1.4rem;
}

/* a, buttons etc.. */

a,
button,
input[type="submit"] {
  transition: cubic-bezier(0.165, 0.84, 0.44, 1) .4s all;
}

a {
  color: var(--link);
  font-size: 16px;
  text-decoration: none;
  border-bottom: solid .1px var();
}

a:hover {
  border-bottom: solid 3px var(white);
}

/* way to remove decorations from links/tag */
.link-remove {
  border: none;
  color: white;
}

.link-remove:hover {
  border: none;
  color: inherit;
}

button,
.btn-login,
.btn {
  background-color: white;
  color: black;
  width: clamp(100px, 100%, 350px);
  font-size: clamp(.7rem, 1.2rem, 1.8rem);
  font-weight: var(--font-weight-semibold);
  padding-top: .5rem;
  padding-bottom: .5rem;
  padding-right: .5rem;
  padding-left: .6rem;
  border-radius: 15px;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  margin-top: .9rem;
  outline: none;
  border: 2px solid var(--main-blue-dark);
  box-shadow: 0px 7px 15px rgba(0, 0, 0, 0.150);
}

button:hover,
.btn-login:hover,
.btn:hover {
  color: black;
  background-color: var(--gray-light);
  border: 2px solid var(--blue);
  translate: 0 -5px;
}

.btn-login {
  font-weight: var(--font-weight-bold);
  border: 3px solid var(--green);
  width: clamp(100px, 100%, 400px);
}

.btn-login:hover {
  border: 3px solid var(--green-dark)
}


footer p {
  position: absolute;
  bottom: 3px;
  left: 17px;
  z-index: -5;
}


/*! Classes */

/* button classes*/
.btn-green {
  background: var(--green);
  border: var(--green-dark) 2px solid;
}

.btn-green:hover {
  color: white;
  background: var(--green-dark);
  border: 2px solid var(--green);
}

.btn-red {
  background: var(--red);
  border: var(--red-dark) 2px solid;
}

.btn-red:hover {
  color: white;
  background: var(--red-dark);
  border: var(--red) 2px solid;
}

.btn-blue {
  background: var(--blue);
  border: var(--blue-dark) 2px solid;
}

.btn-blue:hover {
  color: white;
  background: var(--blue-dark);
  border: var(--blue) 2px solid;
}

.btn-small {
  padding: .1rem .4rem;
  border-radius: 10px;
  width: fit-content;
  border: white 2px solid;
  color: white;
  background-color: var(--blue);
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  font-weight: var(--font-weight-semibold);
  position: relative;
  top: 0;
  left: -35%;
}

.btn-small:hover {
  background-color: var(--blue-dark);
  color: white;
  border: white 2px solid;
  translate: 0 -5px;
}

/* tag to change regular button on hover */
/* has no no-hover style */
.btn-white-greenhover:hover {
  color: white;
  background: var(--green-dark);
  border: 2px solid var(--green);
}

/* tag to change regular button on hover */
/* has no no-hover style */
.btn-white-redhover:hover {
  color: white;
  background: var(--red-dark);
  border: var(--red) 2px solid;
}

/* tag to change regular button on hover */
/* has no no-hover style */
.btn-white-bluehover:hover {
  color: white;
  background: var(--blue-dark);
  border: var(--blue) 2px solid;
}

.btn-gray {
  padding: 7px;
  width: clamp(100px, 100%, 250px);
  background-color: var(--gray-dark);
  border-color: white;
  color: white;
  font-weight: 300;
}

.btn-gray:hover {
  border-color: var(--blue-dark);
  background-color: var(--main-blue-dark);
  color: var(--gray-light);
}

.warning-box {
  background: var(--yellow);
  padding: 0.5rem 1.5rem 0.5rem 1.5rem;
  border-radius: 12px;
  width: clamp(200px, 100%, 300px);
  box-shadow: 0px 10px 10px rgba(000, 000, 000, .25);
  border: 3px solid var(--yellow-dark);
  color: black;
}

.error-box {
  background: var(--red);
  padding: 0.5rem 1.5rem 0.5rem 1.5rem;
  border-radius: 12px;
  width: clamp(200px, 100%, 300px);
  box-shadow: 0px 10px 10px rgba(000, 000, 000, .25);
  border: 3px solid var(--red-dark);
}

.warning-box>p,
.error-box>p {
  margin: 0;
}

/* form, label & form-helpers */

.back-button-form {
  width: 100%;
  display: contents;
}

.box-input-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  margin-bottom: 1rem;
}

label {
  font-size: 1rem;
  margin-left: 1rem;
  margin-bottom: .3rem;
}

input,
select {
  padding: .5rem 1.1rem;
  background-color: white;
  border-radius: 25px;
  border: none;
  box-shadow: inset 0px 10px 10px rgba(0, 0, 0, 0.150);
  font-size: 1rem;
  filter: drop-shadow(0px 10px 15px rgba(0, 0, 0, 0.20));
  width: 100%;
}

input::placeholder,
select {
  font-size: 1rem;
  font-weight: var(--font-weight-normal);
  color: rgb(46, 46, 46);
}

/** //////////////////////////////////////////////////////////////////////////////// */
/* checkbox  */
/* Customize the label (the container) */
.checkbox_container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.checkbox_container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 30px;
  width: 30px;
  background-color: white;
  border-radius: 8px;
  box-shadow: inset 0px 4px 4px rgba(0, 0, 0, 0.150);
}

/* On mouse-over, add a grey background color */
.checkbox_container:hover input~.checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.checkbox_container input:checked~.checkmark {
  background-color: var(--blue-dark);
  outline: 1px white solid;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkbox_container input:checked~.checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkbox_container .checkmark:after {
  left: 13px;
  top: -8px;
  width: 9px;
  height: 28px;
  border: solid white;
  border-width: 0 5px 5px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/** /////////////////////////////////////////////////////////////////////////////// */

select {
  appearance: none;
}

select:focus-visible {
  outline: 2px solid var(--blue);
}

optgroup {
  color: gray;
  font-weight: var(--font-weight-semibold);
  font-size: var(--font-size);
  border-bottom: 1px solid var(--gray-dark);
  background-color: var(--gray-light);
}

optgroup:nth-child(even) {
  background-color: white;
}

option {
  color: black;
  font-weight: var(--font-weight-normal);
  font-size: var(--font-size);
}

input:focus-visible {
  outline: solid var(--blue) 2px;
  color: var(--blue);
}

input:focus-visible::placeholder {
  color: var(--blue);
}

/* containers */
.box-center {
  justify-content: center;
  display: flex;
  align-items: center;
}

.container {
  width: clamp(min(600px, 100%), 60%, 600px);
  justify-content: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  flex-wrap: wrap;
}

.container-full-screen {
  padding-top: 2rem;
  height: 100%;
  width: 100vw;
}

.container_space-between {
  display: flex;
  justify-content: space-between !important;
  /* importent used to overrule */
}

.container_space-around {
  display: flex;
  justify-content: space-around !important;
  /* importent used to overrule */
}

.small-row {
  flex-direction: column;
}

.container-lg {
  width: clamp(min(100vw, 600px), 80%, 1400px) !important;
}

.container-xl {
  width: clamp(min(100vw, 600px), 95%, 1500px);
  padding: 1.5rem .3rem;
}

.box-bg-gradient {
  padding: .8rem;
  backdrop-filter: blur(30px);
  background: linear-gradient(180deg, var(--main-blue-transparent) 0%, var(--main-blue-dark-transparent) 100%);
  box-shadow: 0px 15px 20px rgba(0, 0, 0, 0.200);
}

.box_width-large {
  width: 90%;
  margin-right: auto;
  margin-left: auto;
}

.box-content-padding {
  width: 100%;
  height: 100%;
  padding-top: 2rem;
  padding-bottom: 1rem;
}

.infobar-container {
  display: flex;
  justify-content: start;
  flex-direction: column;
  flex-wrap: wrap;
  width: 100%;
  padding-left: .4rem;
  padding-right: .4rem;
  padding-bottom: .4rem;
  border-bottom: .5px solid rgba(255, 255, 255, 0.658);
  font-size: clamp(1.2rem, normel, 2rem);
}


/** table */
.container-table-overflow {
  padding-bottom: 5px;
  overflow-x: auto;
}

.table-head {
  width: fit-content;
  border-top-right-radius: 25px;
  border-top-left-radius: 25px;
  background-color: rgba(14, 16, 19, 0.329);
  padding-top: .8rem;
  padding-left: .5rem;
  padding-right: .4rem;
  display: grid;
  grid-template-columns: min(150px, 50vw) min(150px, 50vw) min(170px, 50vw) min(200px, 50vw) min(200px, 50vw) min(100px, 50vw) min(150px, 50vw);
}

.table-head>p {
  font-size: clamp(.8rem, 1.2rem, 1.5rem);
  text-wrap: nowrap;
  overflow: hidden;
}

.table-row {
  width: fit-content;
  padding-right: .4rem;
  padding-left: .4rem;
  background-color: rgba(185, 185, 185, 0.128);
  font-size: 1.1rem;
  display: grid;
  /* grid-template-columns: 150px 150px 170px 200px 200px 75px 200px; min(150px, 50vw) min(150px, 50vw) min(170px, 50vw) min(200px, 50vw) min(200px, 50vw) min(75px, 50vw) min(200px, 50vw)*/
  grid-template-columns: min(150px, 50vw) min(150px, 50vw) min(170px, 50vw) min(200px, 50vw) min(200px, 50vw) min(100px, 50vw) min(150px, 50vw);
  box-shadow: inset 0vw 0px 0px rgba(9, 42, 73, 0.4);
  transition: .4s cubic-bezier(0.5, 1.04, 0.19, 0.99);
}

.table-row:hover {
  box-shadow: inset 0vw -100px 0px rgba(38, 108, 165, 0.9);
  font-size: 1.2rem;
}

.table-row p {
  text-shadow: 0px 4px 6px rgba(0, 0, 0, 100);
  padding-left: .5rem;
  border-right: .5px solid rgba(0, 0, 0, 0.4);
}

.table-row:nth-child(even) {
  background-color: rgba(0, 0, 0, 0.26);
}

.table-row:last-child {
  border-radius: 0 0 10px 10px;
  border-bottom: var(--gray-light) 1px solid;
}

.table-row>p:last-child {
  padding-right: .4rem;
  border-right: none;
}


.select-wrapper {
  position: relative;
}

.select-wrapper::after {
  content: "▼";
  font-size: 1.2rem;
  top: 25%;
  right: 2%;
  position: absolute;
  color: var(--gray-dark);
}

/* grenaral perpuse */

.text-small {
  font-size: .5rem;
  color: var(--text-gray);
  font-style: italic;
}

.flex-direction-column {
  flex-direction: column !important;
}

.padding-s {
  padding: 1rem;
}

.padding-m {
  padding: 2rem;
}

.padding-l {
  padding: 3rem;
}

.margin-s {
  margin: 1rem;
}

.margin-m {
  margin: 2rem;
}

.margin-l {
  margin: 3rem;
}

.margin-bottom-1 {
  margin-bottom: 2rem;
}

.margin-bottom-0 {
  margin-bottom: 0rem;
}

.margin-x-auto {
  margin-right: auto !important;
  margin-left: auto !important;
}

.max-with-800 {
  width: clamp(200px, 100%, 800px);
  margin-left: auto;
  margin-right: auto;
}

.width-100 {
  width: 100%;
}

/* media screen size +600px */
@media screen and (min-width: 600px) {

  h1,
  .h1 {
    font-size: 3rem;
  }

  h2,
  .h2 {
    font-size: 2.5rem;
  }

  h3,
  .h3 {
    font-size: 2rem;
  }

  h4,
  .h4 {
    font-size: 1.5rem;
  }

  h5,
  .h5 {
    font-size: 1.2rem;
  }

  h6,
  .h6 {
    font-size: 1rem;
  }

  button,
  .btn-login,
  .btn {
    padding-top: .8rem;
    padding-bottom: .8rem;
  }

  .box-bg-gradient {
    border-radius: 25px;
  }

  .container {
    flex-direction: row;
  }

  .btn-small {
    position: absolute;
    top: 1rem;
    left: 1rem;
  }

  .infobar-container {
    display: flex;
    justify-content: space-around;
    flex-direction: row;
  }

  label {
    font-size: 1.2rem;
  }

  input,
  select {
    font-size: 1.2rem;
  }

  input::placeholder {
    font-size: 1.2rem;
  }

  .small-row {
    flex-direction: row;
  }

  .btn-gray {
    padding: 7px;
  }
}

/* media screen size 900px */
@media screen and (min-width: 900px) {
  label {
    font-size: 1.4rem;
  }

  input,
  select {
    font-size: 1.4rem;
  }

  input::placeholder {
    font-size: 1.4rem;
  }
}